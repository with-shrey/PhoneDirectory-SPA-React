{"version":3,"sources":["shared/types.js","containers/ContactForm.js","containers/ContactItem.js","redux/actions/contacts.action.js","containers/ContactAdd.js","containers/ContactList.js","App.js","serviceWorker.js","redux/reducers/contacts.reducer.js","redux/reducers/index.js","redux/index.js","index.js"],"names":["ADD_CONTACT","DELETE_CONTACT","UPDATE_CONTACT","ContactForm","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","callback","resetFields","this","contact","setFieldsValue","fieldsError","_this$props$form","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","nameError","phoneError","react_default","a","createElement","es_form","onSubmit","Item","validateStatus","help","rules","required","message","input","placeholder","type","es_button","htmlType","disabled","Object","keys","some","field","Component","Form","create","name","ContactItem","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","edit","_this2","onClick","setState","_this3","contacts","row","style","marginTop","col","xs","sm","md","span","offset","lg","card","title","width","extra","getCardButton","bind","Fragment","marginBottom","phone","color","cursor","deleteContact","containers_ContactForm","updateContact","connect","index","payload","ContactAdd","addContact","ContactList","console","log","backgroundColor","height","overflowY","layout","Header","theme","containers_ContactAdd","map","containers_ContactItem","App","containers_ContactList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","defaultState","reducers","combineReducers","arguments","length","undefined","action","slice","push","objectSpread","splice","store","createStore","ReactDOM","render","es","BrowserRouter","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d2465bdd.chunk.js","sourcesContent":["export const ADD_CONTACT = 'ADD_CONTACT'\nexport const DELETE_CONTACT = 'DELETE_CONTACT'\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT'","import React, { Component } from 'react'\nimport {Row,Col,Card,\n  Form, Icon, Input, Button\n} from 'antd';\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\nclass ContactForm extends Component {\n  componentDidMount() {\n    // To disabled submit button at the beginning.\n    if(this.props.contact)\n      this.props.form.setFieldsValue(this.props.contact);\n    this.props.form.validateFields();\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.callback(values);\n        this.props.form.resetFields();\n      }\n    });\n  }\n  render() {\n    const {\n      getFieldDecorator, getFieldsError, getFieldError, isFieldTouched,\n    } = this.props.form;\n    // Only show error after a field is touched.\n    const nameError = isFieldTouched('name') && getFieldError('name');\n    const phoneError = isFieldTouched('phone') && getFieldError('phone');\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Item\n          validateStatus={nameError ? 'error' : ''}\n          help={nameError || ''}\n        >\n          {getFieldDecorator( 'name', {\n            rules: [ { required: true, message: 'Please input your name!' } ],\n          } )(\n            <Input placeholder=\"Name\"/>\n          )}\n        </Form.Item>\n        <Form.Item\n          validateStatus={phoneError ? 'error' : ''}\n          help={phoneError || ''}\n        >\n          {getFieldDecorator( 'phone', {\n            rules: [ { required: true, message: 'Please input your Phone!' } ],\n          } )(\n            <Input type=\"number\" placeholder=\"Phone\"/>\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={hasErrors( getFieldsError() )}\n          >\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    \n  )\n  }\n}\n\n\nexport default Form.create({ name: 'contact_form' })(ContactForm)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Card, Row, Col, Icon } from 'antd'\nimport { deleteContact, updateContact } from '../redux/actions/contacts.action'\nimport ContactForm from './ContactForm'\n\nclass ContactItem extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      edit: false\n    }\n  }\n  getCardButton(){\n    if ( this.state.edit ){\n      return <a onClick={() => this.setState( { edit: false } )}>CANCEL</a>\n    } else{\n      return null;\n    }\n  }\n  render() {\n    const contact = this.props.contacts[this.props.contact];\n    return (\n      <Row style={{marginTop: '20px'}}>\n        <Col xs={24} sm={24} md={{span: 12,offset:6}} lg={{span: 12,offset:6}} >\n          <Card title={contact.name}  style={{ width: '100%' }}\n                extra={this.getCardButton.bind(this)()}\n          >\n            {\n              !this.state.edit &&\n              <React.Fragment>\n                <Row style={{marginBottom: '40px'}}>\n                  <Col span={12}>Phone: {contact.phone}</Col>\n                </Row>\n                <Row>\n                  <Col span={4}><span style={{color: '#579cb8',cursor: 'pointer'}} onClick={() => {this.setState({edit: true})}}>EDIT</span></Col>\n                  <Col span={4}><span style={{color: '#ff454a',cursor: 'pointer'}} onClick={() => {this.props.deleteContact(this.props.contact)}}>DELETE</span></Col>\n                </Row>\n              </React.Fragment>\n            }\n            {\n              this.state.edit&&\n              (\n                <ContactForm contact={contact} callback={(contact) => {this.props.updateContact(contact,this.props.contact); this.setState({edit: false})}} />\n              )\n            }\n          </Card>\n        </Col>\n      </Row>\n  )\n  }\n}\n\nconst mapStateToProps = state => ( {\n  contacts:state.contacts.contacts,\n} )\n\n\nexport default connect( mapStateToProps, {deleteContact, updateContact} )( ContactItem )\n\n","import { ADD_CONTACT, DELETE_CONTACT, UPDATE_CONTACT } from '../../shared/types'\n\nexport const addContact = (contact) => {\n  return {\n    type: ADD_CONTACT,\n    payload: contact\n  }\n}\nexport const deleteContact = (index) => {\n  return {\n    type: DELETE_CONTACT,\n    payload: index\n  }\n}\n\nexport const updateContact = (contact,index) => {\n  return {\n    type: UPDATE_CONTACT,\n    payload: {\n      contact,index\n    }\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {Row,Col,Card,\n} from 'antd';\nimport { addContact } from '../redux/actions/contacts.action'\nimport ContactForm from './ContactForm'\n\nclass ContactAdd extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      edit: false\n    }\n  }\n  getCardButton(){\n    return <a onClick={() => this.setState( { edit: !this.state.edit } )}>{this.state.edit? 'CANCEL': 'ADD'}</a>\n  }\n  render() {\n    return (\n      <Row style={{marginTop: '30px'}}>\n        <Col xs={24} sm={24} md={{span: 12,offset:6}} lg={{span: 12,offset:6}} >\n          <Card title=\"New Contact\"       extra={this.getCardButton.bind(this)()}\n                style={{ width: '100%' }}>\n            {\n              this.state.edit&&\n              <ContactForm callback={(contact) => {this.props.addContact(contact);this.setState({edit: false})}}/>\n            }\n          </Card>\n        </Col>\n      </Row>\n    \n  )\n  }\n}\n\n\nexport default connect( null, {addContact} )( ContactAdd)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Layout, Row, Col } from 'antd'\nimport ContactItem from './ContactItem'\nimport ContactAdd from './ContactAdd'\n\nclass ContactList extends Component {\n  render() {\n    console.log(this.props)\n    return (\n      <div style={{backgroundColor: '#e3e3e3', height:'100vh', overflowY: 'auto'}}>\n        <Layout.Header theme=\"dark\"><h1 style={{color: '#fff'}}>Contact App</h1></Layout.Header>\n         \n            <ContactAdd />\n            {\n              this.props.contacts.map((contact,index) => {\n                return <ContactItem contact={index} />\n              })\n            }\n      </div>\n    \n  )\n  }\n}\n\nconst mapStateToProps = state => ( {\n  contacts:state.contacts.contacts,\n} )\n\n\nexport default connect( mapStateToProps, {} )( ContactList )\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom'\nimport ContactList from './containers/ContactList'\n\nclass App extends Component {\n  render() {\n    return (\n      <ContactList />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_CONTACT, DELETE_CONTACT, UPDATE_CONTACT } from '../../shared/types'\n\nconst defaultState = {\n  contacts: [{\n    name: 'Shrey Gupta',\n    phone: '8726212000'\n  }]\n};\n\nexport default function contactsReducer (state = defaultState, action) {\n  switch (action.type) {\n    case ADD_CONTACT:     // Success Ful Request (App can proceed)\n      let contacts = state.contacts.slice(0);\n      contacts.push(action.payload)\n      return {\n        ...state,\n        contacts\n      }\n      case DELETE_CONTACT:     // Success Ful Request (App can proceed)\n       contacts = state.contacts.slice(0);\n       contacts.splice(action.payload, 1);\n      return {\n        ...state,\n        contacts\n      }\n    case UPDATE_CONTACT:     // Success Ful Request (App can proceed)\n      contacts = state.contacts.slice(0);\n      contacts[action.payload.index] = action.payload.contact;\n      return {\n        ...state,\n        contacts\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport contactsReducer from './contacts.reducer'\n\nconst reducers = combineReducers({\n  contacts: contactsReducer,\n});\n\nexport default reducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\n\n\nlet store = createStore(\n  reducers,\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux'\nimport { BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(<Provider  store={store}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n</Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}